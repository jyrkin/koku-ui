
function KokuAppointmentDetails(renderUrls) {
	if (typeof renderUrls === 'undefined') {
		renderUrls = {
				cancelUrl : "<%= cancelURL %>",
				disableSlotUrl : "<%= disableSlotURL %>",
				appointmentRenderUrl :  "<%= appointmentRenderURL %>"
		};	
	}
	this.renderUrls = renderUrls;
};


KokuAppointmentDetails.prototype.callbackCancel = function(result) {	
	if (result == 'OK') {
		$.jGrowl.defaults.position = 'top-left';
		// jQuery.jGrowl("<spring:message code="notification.canceled.appointment"/>", { theme: 'jGrowlThemeSuccess'}, '#show-message', '275');
		KokuUtil.notifications().success("<spring:message code="notification.canceled.appointment"/>");
		setTimeout("kokuNavigationHelper.returnMainPage();", 3000);
	} else if (result == 'FAIL') {
		('#jGrowl').css('background-color', '#FF0000');
		//jQuery.jGrowl("<spring:message code="notification.canceled.appointment.failed"/>", { theme: 'jGrowlThemeFailure'}, '#show-message', '275');
		KokuUtil.notifications().error("<spring:message code="notification.canceled.appointment.failed"/>");
		$("#cancelButton").attr("disabled","enabled");
	} else {
		KokuUtil.errorMsg.showErrorMessage("<spring:message code="error.unLogin" />");
		$("#cancelButton").attr("disabled","enabled");
	}
};


KokuAppointmentDetails.prototype.cancelAppointment = function(appointment, targetPerson) {
	var kokuAjax = new KokuAjax(this.renderUrls);
	var appointments = [], targetPersons = [], comment, taskType, status;
	appointments[0] = appointment;
	targetPersons[0] = targetPerson;
	var callback = this.callbackCancel;
	var acceptCallback = function() {
		$("#cancelButton").attr("disabled","disabled");
		var comment = jQuery('#kokuCancelMessage').val();
		kokuAjax.cancelAppointments(appointments, targetPersons, comment, callback);
	};
	var refuseCallback = function() {};
	
	KokuUtil.dialogs.cancelAppointment('#cancelAppointment', acceptCallback, refuseCallback, 'Lähetä peruutus', 'Sulje dialogi', 500, 290);
};

KokuAppointmentDetails.prototype.disableAppointmentSlot = function(appointmentId, slotNumber) {
	var kokuAjax = new KokuAjax(this.renderUrls);
	var callback = function(result) {	
		if (result == 'OK') {
			$.jGrowl.defaults.position = 'top-left';
			// jQuery.jGrowl("<spring:message code="notification.canceled.appointment"/>", { theme: 'jGrowlThemeSuccess'}, '#show-message', '275');
			KokuUtil.notifications().success("<spring:message code="notification.canceled.appointment"/>");
		} else if (result == 'FAIL') {
			('#jGrowl').css('background-color', '#FF0000');
			//jQuery.jGrowl("<spring:message code="notification.canceled.appointment.failed"/>", { theme: 'jGrowlThemeFailure'}, '#show-message', '275');
			KokuUtil.notifications().error("<spring:message code="notification.canceled.appointment.failed"/>");
			$("#slotCancelButton" + slotNumber).attr("disabled","enabled");
		} else {
			KokuUtil.errorMsg.showErrorMessage("<spring:message code="error.unLogin" />");
			$("#slotCancelButton" + slotNumber).attr("disabled","enabled");
		}
	};
	var acceptCallback = function() {
		$("#slotCancelButton" + slotNumber).attr("disabled","disabled");
		kokuAjax.disableAppointmentSlot(appointmentId, slotNumber, callback);
	};
	var refuseCallback = function() {};
	
	KokuUtil.dialogs.cancelAppointment('#cancelAppointmentSlotDialog', acceptCallback, refuseCallback, "Poista tapaaminen", "Sulje dialogi", 400, 175);
};